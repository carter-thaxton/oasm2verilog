
#include "IllegalNames.h"
#include "StringMap.h"
#include "Common.h"

/*
 * Maintain a hashtable to efficiently check for illegal signal and module names.
 * These can be illegal for a variety of reasons:
 * - keywords in Verilog
 * - used in the implementation of Verilog object models
 * - reserved for future use in OASM
 */


static const char *reservedVerilogNames[] = 
{
	"begin",
	"end",
	"module",
	"macromodule",
	"endmodule",
	"primitive",
	"endprimitive",
	"table",
	"endtable",
	"task",
	"endtask",
	"function",
	"endfunction",
	"specify",
	"endspecify",

	"initial",
	"always",
	"assign",
	"deassign",
	"force",
	"release",
	"defparam",
	"specparam",
	"if",
	"else",
	"case",
	"casez",
	"casex",
	"endcase",
	"default",
	"forever",
	"repeat",
	"while",
	"for",
	"wait",
	"disable",
	"fork",
	"join",
	"posedge",
	"negedge",
	"edge",

	"integer",
	"real",
	"time",
	"event",
	"input",
	"output",
	"inout",
	"parameter",
	"reg",
	"wire",
	"trireg",
	"tri",
	"tri0",
	"tri1",
	"supply0",
	"supply1",
	"wand",
	"wor",
	"triand",
	"trior",
	"scalared",
	"vectored",
};

static const char *illegalSignalNames[] = 
{
	"instruction",
};

static const char *illegalModuleNames[] = 
{
	// modules from moa3600_interface_lib
	"ALU",
	"DELAY_C",
	"DELAY_VR",
	"DMA",
	"FPOA_CONTROL",
	"GPIO",
	"IRAM",
	"MAC",
	"MSG_INTF",
	"MUX_C",
	"MUX_VR",
	"RF_COUNTER",
	"RF_FIFO",
	"RF_RAM",
	"RF_READ_SEQ",
	"RX",
	"SAD",
	"TX",
	"XMEM",

	// modules from moa3600_implementation_lib
	"abcm_mux_center",
	"abcm_mux_center_rf",
	"abcm_mux_east",
	"abcm_mux_misc",
	"abcm_mux_misc_rf",
	"abcm_mux_north",
	"abcm_mux_south",
	"abm_mux_ne",
	"abm_mux_nw",
	"abm_mux_se",
	"abm_mux_sw",
	"adder_top",
	"afifoCtl",
	"ALU0",
	"ALU1",
	"alu_hole",
	"alu_input_mux_pls_cfg",
	"alu_input_mux_reload_cfg",
	"alu_input_mux_reload_corner_cfg_NE",
	"alu_input_mux_reload_corner_cfg_NW",
	"alu_input_mux_reload_corner_cfg_SE",
	"alu_input_mux_reload_corner_cfg_SW",
	"alu_out_mux",
	"alu_sm_top",
	"alu_so",
	"alu_so_tf_block_01_cfg",
	"alu_so_tf_block_23_cfg",
	"alu_so_tfa_block_cfg",
	"alu_sram_ns",
	"alu_sram_op",
	"alu_sram_op_decode",
	"alu_sram_sel",
	"alu_sram_sel_decode",
	"alu_sram_wectl",
	"alu_stack",
	"alu_tf_tfa_lo_cfg_NE",
	"alu_tf_tfa_lo_cfg_NW",
	"alu_tf_tfa_lo_cfg_SE",
	"alu_tf_tfa_lo_cfg_SW",
	"alu_tfa_block",
	"and2a",
	"and2a_hvt",
	"and2b",
	"and2b_hvt",
	"and2c",
	"and2c_hvt",
	"and2d",
	"and2d_hvt",
	"and3",
	"and3a",
	"and3a_hvt",
	"and3b",
	"and3b_hvt",
	"and3c",
	"and3c_hvt",
	"and3d",
	"and3d_hvt",
	"ao21a",
	"ao21a_hvt",
	"ao21b",
	"ao21b_hvt",
	"ao21c",
	"ao21c_hvt",
	"aoi21a",
	"aoi21a_hvt",
	"aoi21b",
	"aoi21b_hvt",
	"aoi221a",
	"aoi221a_hvt",
	"atpg_ctrl",
	"bist_mode_bfrs",
	"bist_south",
	"buf10",
	"buf16",
	"buf2",
	"buf5",
	"buf7",
	"bufac",
	"bufad",
	"bufbd",
	"bufce",
	"bufdf",
	"bufeg",
	"caccrc",
	"ch_bond_8bit",
	"ch_bond_master_8bit",
	"ch_bond_slave_8bit",
	"cl_2_stage2_c",
	"cl_3_stage1_c",
	"clklbcm",
	"clock_mux",
	"CMPE22D2",
	"CMPE32D2",
	"compressor7",
	"config_bit",
	"config_reg",
	"context_memory",
	"control_slot",
	"corner_block_ne",
	"corner_block_nw",
	"corner_block_se",
	"corner_block_sw",
	"crc16_p100B_d32",
	"crc32",
	"crc32_p04C11DB7_d16",
	"crc32_p04C11DB7_d32",
	"crc32_p04C11DB7_d48",
	"crc32_p04C11DB7_d64",
	"crc_part_b",
	"cv_1x_mux16",
	"data_mover",
	"data_write_path_asic",
	"ddr2_phy_timing_control",
	"debug_north",
	"DELAY0",
	"delay_bit",
	"delay_bit_rf",
	"delay_buf",
	"delay_buf_rf",
	"delay_mux",
	"delay_mux_mac",
	"descr_mem_arbiter",
	"descriptor_memory",
	"deskew_buffer",
	"dff1c",
	"dff1c_hvt",
	"dff1c_p",
	"dff1c_p_hvt",
	"dffn1c",
	"dffn1c_hvt",
	"dfrc",
	"dfrc_hvt",
	"dfsc",
	"dfsc_hvt",
	"dl_dllp",
	"dl_rx_main",
	"dl_tlp",
	"dl_tx_main",
	"dlcm_sm",
	"dll_clk_mux_2to1",
	"dll_config_regs",
	"dll_lock",
	"dll_top",
	"dma",
	"DMA0",
	"dma_config",
	"dmlbcm",
	"donut_top",
	"dti_spp_tm90ngod_1024x39_wt4bw4xc_m",
	"ecc",
	"ecc_cb_gen",
	"ecc_gen",
	"ecc_ordering",
	"ecc_sbc",
	"eighth_pixel_compressor_v1",
	"eighth_pixel_interpolator",
	"endpoint_cfg_regs",
	"endpoint_decode",
	"fastinit",
	"fastsdram",
	"fc_parse",
	"FPOA_CONTROL0",
	"gate_clk_sram",
	"get_cmd_type",
	"gpio",
	"GPIO0",
	"gpio_clock",
	"gpio_clock_sync",
	"gpio_config",
	"gpio_core",
	"gpio_domain",
	"gpio_hardmac",
	"gpio_input_reg",
	"gpio_local_bus",
	"gpio_output_toggle_reg",
	"gpio_pad",
	"gpio_slot",
	"half_addb",
	"half_pixel_compressor_v1",
	"half_pixel_interpolator",
	"hold_init_regs",
	"hold_init_regs_cen",
	"hold_init_regs_rf",
	"imux_isolation_rf",
	"inferred_block_ram",
	"inferred_block_ram_ordered_buffer",
	"inferred_shallow_ram",
	"input_high",
	"input_high_hvt",
	"input_low",
	"input_low_hvt",
	"inv",
	"inv10",
	"inv16",
	"inv2",
	"inv5",
	"inv7",
	"inva",
	"inva_hvt",
	"invb",
	"invb_hvt",
	"invc",
	"invc_hvt",
	"invd",
	"invd_hvt",
	"inve",
	"inve_hvt",
	"invf",
	"invf_hvt",
	"invg",
	"invg_hvt",
	"iram",
	"IRAM0",
	"iram_address_mux",
	"iram_control",
	"iram_even",
	"iram_lbus_match",
	"iram_membist_sm",
	"iram_mux",
	"iram_n",
	"iram_n_slot",
	"iram_n_stub",
	"iram_odd",
	"iram_rd_mux",
	"iram_s",
	"iram_s_slot",
	"iram_s_stub",
	"iram_sram_io",
	"iram_stub",
	"iram_wd_mux",
	"latc",
	"lcbd_12",
	"lcbd_16",
	"lcbd_21",
	"lcbd_8",
	"lcbd_8_flip",
	"lfsr21",
	"local_bus_master",
	"local_bus_slave",
	"local_bus_slave_duplex",
	"local_bus_slave_rx",
	"local_bus_slave_tx",
	"logic_top",
	"lts_sm",
	"m2_se_reg16",
	"m2_se_reg5",
	"m2_se_reg7",
	"MAC0",
	"MAC1",
	"mac_a_select",
	"mac_a_sm",
	"mac_abm_mux_v2",
	"mac_adder40_v4",
	"mac_adderomux_clkdriver",
	"mac_b_cbus_lat",
	"mac_b_select",
	"mac_b_sm",
	"mac_booth",
	"mac_booth_m2",
	"mac_booth_p1m1",
	"mac_booth_p2",
	"mac_booth_ppg0",
	"mac_booth_ppg1",
	"mac_booth_ppg2",
	"mac_booth_ppg3",
	"mac_booth_ppg4",
	"mac_booth_ppg5",
	"mac_booth_ppg6",
	"mac_booth_ppg7",
	"mac_buf_diff",
	"mac_buffer_dy",
	"mac_cfg_left",
	"mac_cfg_right",
	"mac_cfg_right_top",
	"mac_clk_driver_v8",
	"mac_clk_en_v3",
	"mac_clk_pp_v3",
	"mac_clk_ppg",
	"mac_clk_red_2",
	"mac_clk_red_v2",
	"mac_clk_reg_v2",
	"mac_comp32_bufc",
	"mac_comp32_bufs",
	"mac_comp32_bufsc",
	"mac_comp32_last_v2",
	"mac_comp32_p_noabut",
	"mac_comp32_p_v4",
	"mac_comp32_v2",
	"mac_comp32_v2_noabut",
	"mac_control_left",
	"mac_control_right",
	"mac_ctrl_bits",
	"mac_ctrl_sm",
	"mac_dcd23",
	"mac_dcd24",
	"mac_delay_bit",
	"mac_delay_buf",
	"mac_dp_front",
	"mac_dp_top",
	"mac_dybuf_fb",
	"mac_frac_mux",
	"mac_hole",
	"mac_imux_framux",
	"mac_inv_4x4",
	"mac_invc_ppj",
	"mac_invc_stg1",
	"mac_isolat",
	"mac_lcb_16_exp",
	"mac_m_sm",
	"mac_mapInputSource",
	"mac_mapOutputSource",
	"mac_md16lat_clk",
	"mac_mode_bits",
	"mac_mode_sm",
	"mac_neg_pp",
	"mac_pls_cmp_b",
	"mac_pp_booth",
	"mac_pp_stg1_top",
	"mac_pp_top",
	"mac_ppg_noabut",
	"mac_ppg_v2",
	"mac_ppj",
	"mac_ppj_row",
	"mac_ppj_vld",
	"mac_r_out_cfg",
	"mac_r_out_ctrl",
	"mac_r_out_mux",
	"mac_r_out_sel",
	"mac_red25_top",
	"mac_red_inv",
	"mac_red_stg1_v2",
	"mac_red_stg2_v2",
	"mac_red_stg3_v2",
	"mac_reg_dy",
	"mac_reg_misc",
	"mac_so",
	"mac_stgbuf_dydiff",
	"mac_wren",
	"mac_wren_sm",
	"macroblock_loader",
	"main_arb",
	"majority3a",
	"majority3a_hvt",
	"mapInputSource",
	"mapOutputSource",
	"mem_rtl_model",
	"memory_interface",
	"memory_model",
	"min_filter21",
	"min_filter22",
	"misr21",
	"mp_config",
	"MSG_INTF0",
	"MUX0",
	"mux21",
	"mux2_hier_firm",
	"mux2a",
	"mux2a_hvt",
	"mux2b",
	"mux2b_hvt",
	"mux2c",
	"mux2c_hvt",
	"mux41",
	"mux4c",
	"mux4c_hvt",
	"mux4x1c_p",
	"mux4x1c_p_hvt",
	"mux4x1c_r",
	"mux4x1c_r_hvt",
	"mux6x1c_r",
	"mux6x1c_r_hvt",
	"mux8_hier_firm",
	"mux8x1c_p",
	"mux8x1c_p_hvt",
	"mux8x1c_r",
	"mux8x1c_r_hvt",
	"mux_16_1_1",
	"mux_4_1_1",
	"mux_5_1_1",
	"mux_6_1_3",
	"mux_8_1_12",
	"muxf5x1e",
	"muxf6x1c",
	"muxh2c",
	"muxh2c_hvt",
	"muxh4c",
	"muxh4c_hvt",
	"muxh8c",
	"mx_2_1_1",
	"mx_4_1_1",
	"nand2",
	"nand2a",
	"nand2a_hvt",
	"nand2b",
	"nand2b_hvt",
	"nand2c",
	"nand2c_hvt",
	"nand2d",
	"nand2d_hvt",
	"nand3",
	"nand3a",
	"nand3a_hvt",
	"nand3b",
	"nand3b_hvt",
	"nand3c",
	"nand3c_hvt",
	"nand3d",
	"nand3d_hvt",
	"nandb2a",
	"nandb2a_hvt",
	"nandb2b",
	"nandb2b_hvt",
	"nandb2c",
	"nandb2c_hvt",
	"nandb2d",
	"nandb2d_hvt",
	"nandb3a",
	"nandb3a_hvt",
	"nandb3b",
	"nandb3b_hvt",
	"nandb3c",
	"nandb3c_hvt",
	"nandb3d",
	"nandb3d_hvt",
	"next_pl_east",
	"next_pl_north",
	"next_v_logic",
	"nor2",
	"nor2a",
	"nor2a_hvt",
	"nor2b",
	"nor2b_hvt",
	"nor2c",
	"nor2c_hvt",
	"nor2d",
	"nor2d_hvt",
	"nor3a",
	"nor3a_hvt",
	"nor3b",
	"nor3b_hvt",
	"nor3c",
	"nor3c_hvt",
	"nor3d",
	"nor3d_hvt",
	"norb2a",
	"norb2a_hvt",
	"norb2b",
	"norb2b_hvt",
	"norb2c",
	"norb2c_hvt",
	"norb2d",
	"norb2d_hvt",
	"norb3a",
	"norb3a_hvt",
	"norb3b",
	"norb3b_hvt",
	"norb3c",
	"norb3c_hvt",
	"norb3d",
	"norb3d_hvt",
	"oa21a",
	"oa21a_hvt",
	"oa21b",
	"oa21b_hvt",
	"oa21c",
	"oa21c_hvt",
	"oa_debug_if",
	"oa_dma_descriptor_if",
	"oa_dma_interface",
	"oa_pcie_dram_if",
	"oa_pcie_notify",
	"oai21a",
	"oai21a_hvt",
	"oai21b",
	"oai21b_hvt",
	"openbank",
	"or2a",
	"or2a_hvt",
	"or2b",
	"or2b_hvt",
	"or2c",
	"or2c_hvt",
	"or2d",
	"or2d_hvt",
	"or3a",
	"or3a_hvt",
	"or3b",
	"or3b_hvt",
	"or3c",
	"or3c_hvt",
	"or3d",
	"or3d_hvt",
	"ordered_buffer",
	"parity10",
	"parity20",
	"parse_for_d_credits",
	"pcie_completer",
	"pcie_config",
	"pcie_context_memory",
	"pcie_core",
	"pcie_core_arm_pipe_x8_250mhz",
	"pcie_core_vc1",
	"pcie_dma_aggregation",
	"pcie_dma_reordering_memory",
	"pcie_endpoint_pm",
	"pcie_engine_vc1",
	"pcie_oa_aggregation",
	"pcie_oa_reordering_memory",
	"pcie_registers",
	"pcie_requestor",
	"pcie_rx_demux",
	"pcie_tag_free_list",
	"pcie_track_timeouts",
	"pcie_tx_arb_mux",
	"pcie_user_if_for_vc0",
	"pdx_clock_divider",
	"pdx_core",
	"pdx_local_bus_master",
	"pdx_local_bus_slave",
	"pdx_slot",
	"periphery_bus_channel",
	"pipeline_sequencer",
	"pixel_memory_interface",
	"pl_ew",
	"pl_lanes_n",
	"pl_ns",
	"pl_rx",
	"pl_seq_gen",
	"pl_skp_gen",
	"pl_tx",
	"pll_clk_mux_4to1",
	"pll_clk_mux_8to1",
	"pll_fast_config_regs",
	"pll_fast_top",
	"pll_gpio_config_regs",
	"pll_gpio_top",
	"pll_lock_det",
	"pls_mux_reg",
	"prom_channel",
	"qm",
	"quarter_pixel_compressor_v1",
	"quarter_pixel_compressor_v2",
	"quarter_pixel_compressor_v3",
	"quarter_pixel_interpolator",
	"rdCtl",
	"read_generator",
	"reg_array_32x40",
	"reg_config",
	"reg_fifo_stat",
	"reg_file_ctrl",
	"reg_in_ctrl_mux",
	"reg_lat_cfg_ctrl",
	"reg_nn_rslt",
	"reg_read_ctrl",
	"reg_so",
	"reg_write_ctrl",
	"reload_mux_nw",
	"reset_control",
	"reset_sync2fastclk",
	"reset_sync2slowclk",
	"result_reg",
	"retry_buffer",
	"RF0",
	"rf_counter",
	"RF_COUNTER1",
	"RF_FIFO1",
	"rf_hole",
	"rf_input_mux_pls_cfg",
	"RF_RAM1",
	"RF_READ_SEQ1",
	"rf_scan_conn",
	"RX0",
	"rx_pad_cfg_regs",
	"rx_pad_data_capt",
	"rx_pad_data_clk_slice",
	"rx_pad_data_slice",
	"rx_pad_data_xlate",
	"rx_pad_fifo_wr_ctrl",
	"rx_pad_top",
	"rx_so_cfg_regs",
	"rx_so_fifo_rd_ctrl",
	"rx_so_top",
	"rx_top",
	"rx_x8_swizzle",
	"rxtx_top_slot",
	"SAD0",
	"sad_core20",
	"sad_core_partitioned",
	"sad_filters21",
	"sad_maker20",
	"sad_memory",
	"sad_memory_mux",
	"sad_results21",
	"sad_top_partitioned",
	"sad_top_partitioned_slot",
	"sc_credit_track_addr",
	"sc_fifo_shallow_ram",
	"scan_buffer",
	"scheduler",
	"scheduler_wrr",
	"scramble",
	"scramble_lane",
	"sdram_ddr2_lb",
	"sdram_ddr2_lb_ecc",
	"search_memories",
	"sfifoCtl",
	"shift_top",
	"small_pkt_transmit",
	"so_array_30x20_utah_stub",
	"so_global_ctrl",
	"so_pl_launch_mux",
	"soi_e",
	"soi_n",
	"soi_n_pdx",
	"soi_ne",
	"soi_nw",
	"soi_reset_sync2slowclk",
	"soi_s",
	"soi_se",
	"soi_sw_utah",
	"soi_sync2fastclk",
	"soi_sync2slowclk",
	"soi_w",
	"spare_clock_logic",
	"stagingFIFO",
	"start_control",
	"stream_parse",
	"sub_pixel_normalize",
	"subpixel_interpolator",
	"subpixel_processor",
	"sync2fastclk",
	"sync2slowclk",
	"sync_pulse2pulse",
	"TCITSMC009DDRDLLA1",
	"TCITSMC009GCGPLLA1",
	"TCITSMC009GDSPLLA1",
	"testmode_control_stub",
	"tf_mux7",
	"tf_mux_center_alu",
	"tf_mux_center_rf",
	"tf_mux_ne",
	"tf_mux_nw",
	"tf_mux_se",
	"tf_mux_sw",
	"tf_subblk_01",
	"tf_subblk_23",
	"tfa_mux4",
	"tfa_mux5",
	"tfa_mux6",
	"tfa_pcn_delay_sel_cfg",
	"tid_free_list",
	"timeout_ctr",
	"TX0",
	"tx_afifo_top",
	"tx_config_regs",
	"tx_data_clk_slice",
	"tx_data_data_slice",
	"tx_data_top",
	"tx_mux",
	"tx_pad_bit_slice",
	"tx_pad_clock_gen",
	"tx_pad_clock_tx_gen",
	"tx_pad_data_output",
	"tx_pad_data_translate",
	"tx_pad_fifo_rd_ctrl",
	"tx_pad_top",
	"tx_so_fifo_wr_ctrl",
	"tx_so_top",
	"tx_top",
	"tx_x8_swizzle",
	"utah_array",
	"utah_top",
	"vc_fc",
	"vc_rx",
	"vc_tx",
	"vcmd_pass",
	"wr_completion_memory",
	"wrapper_ram_1024x64_1r1w_en1",
	"wrCtl",
	"XMEM0",
	"xor2a",
	"xor2a_hvt",
	"xor2b",
	"xor2b_hvt",
	"xor2c",
	"xor2c_hvt",
	"xor2s_p",
	"xor2s_p_hvt",
	"xor2s_r",
	"xor2s_r_hvt",
	"xor3c",
	"xor3c_hvt",
	"xor3s_p",
	"xor3s_p_hvt",
	"xor3s_r",
	"xor3s_r_hvt",
	"xorb2c",
	"xorb2c_hvt",
	"xram",
	"xram_config",
};



/*
 * Functions to check for illegal signal and module names.
 */

static StringMap reservedVerilogNames_map;
static StringMap illegalSignalNames_map;
static StringMap illegalModuleNames_map;

void InitializeIllegalNames()
{
	int i, n;

	n = countof(reservedVerilogNames);
	for (i=0; i < n; i++)
	{
		reservedVerilogNames_map.Add(reservedVerilogNames[i], (void *) 1);
	}

	n = countof(illegalSignalNames);
	for (i=0; i < n; i++)
	{
		illegalSignalNames_map.Add(illegalSignalNames[i], (void *) 1);
	}

	n = countof(illegalModuleNames);
	for (i=0; i < n; i++)
	{
		illegalModuleNames_map.Add(illegalModuleNames[i], (void *) 1);
	}
}


bool IsReservedVerilogName(const char *name)
{
	void *value = reservedVerilogNames_map.Get(name);
	return (value != NULL);
}


bool IsIllegalSignalName(const char *name)
{
	if (IsReservedVerilogName(name))
		return true;

	void *value = illegalSignalNames_map.Get(name);
	return (value != NULL);
}


bool IsIllegalModuleName(const char *name)
{
	if (IsReservedVerilogName(name))
		return true;

	void *value = illegalModuleNames_map.Get(name);
	return (value != NULL);
}

